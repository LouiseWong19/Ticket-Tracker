{"version":3,"sources":["data/team.js","Components/Counter/Counter.jsx","Components/Employee/Employee.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["team","id","name","role","counter","className","EmployeeTile","props","console","log","employeeName","map","names","index","employeeRole","roles","App","employeeNames","employeeRoles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAoDeA,G,UApDF,CACX,CACEC,GAAI,EACJC,KAAM,eACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,iBACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,eACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,gBACNC,KAAM,sBAER,CACEF,GAAI,EACJC,KAAM,gBACNC,KAAM,sBAER,CACEF,GAAI,EACJC,KAAM,aACNC,KAAM,6BAER,CACEF,GAAI,EACJC,KAAM,kBACNC,KAAM,mBAER,CACEF,GAAI,EACJC,KAAM,aACNC,KAAM,UAER,CACEF,GAAI,EACJC,KAAM,gBACNC,KAAM,UAER,CACEF,GAAI,GACJC,KAAM,mBACNC,KAAM,c,qBCnCKC,EAXC,WACd,OAAO,sBAAKC,UAAY,UAAjB,UACL,yCACA,mCACA,sBAAKA,UAAU,kBAAf,UACE,uCACA,8CCqBSC,EAzBM,SAACC,GACpB,IAAOL,EAAaK,EAAbL,KAAKC,EAAQI,EAARJ,KACZK,QAAQC,IAAIP,GAEZ,IAAMQ,EAAeR,EAAKS,KAAI,SAACC,EAAOC,GACpC,OAAO,mBAA8BR,UAAU,aAAxC,SAAsDO,GAA7C,YAAcC,MAG1BC,EAAeX,EAAKQ,KAAI,SAACI,EAAOF,GACpC,OAAO,mBAA8BR,UAAU,aAAxC,SAAsDU,GAA7C,YAAcF,MAIhC,OACA,mCACA,sBAAKR,UAAY,QAAjB,UACE,6BAAKK,IACL,6BAAKI,IACL,cAAC,EAAD,UCOWE,EAxBH,WACV,IAAMC,EAAgBjB,EAAKW,KAAI,SAACC,GAC9B,OAAOA,EAAMV,QAEfM,QAAQC,IAAIQ,GAEZ,IAAMC,EAAgBlB,EAAKW,KAAI,SAACI,GAC9B,OAAOA,EAAMZ,QAIf,OAFAK,QAAQC,IAAIS,GAGV,sBAAKb,UAAU,MAAf,UACE,gDACA,yBAASA,UAAU,UAAnB,SACE,8BACE,cAAC,EAAD,CAAMH,KAAMe,EAAed,KAAMe,YCV5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d9dc6ec.chunk.js","sourcesContent":["const team = [\r\n  {\r\n    id: 1,\r\n    name: \"Alima Miller\",\r\n    role: \"Junior Software Developer\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Evelyn Rodgers\",\r\n    role: \"Junior Software Developer\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Henley Myers\",\r\n    role: \"Junior Software Developer\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Celyn Sanders\",\r\n    role: \"Software Developer\"\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Effie Mohamed\",\r\n    role: \"Software Developer\"\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Karam Lees\",\r\n    role: \"Senior Software Developer\"\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Eleanor Dowling\",\r\n    role: \"Project Manager\"\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Haris Grey\",\r\n    role: \"Tester\"\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Sohaib Farley\",\r\n    role: \"Tester\"\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Phillip Mitchell\",\r\n    role: \"Hard Man\"\r\n  },\r\n]\r\nexport default team;","import React from 'react';\r\nimport './Counter.scss';\r\n\r\nconst counter = () =>{\r\n  return <div className = \"counter\">\r\n    <h4>Counter</h4>\r\n    <h4>0</h4>\r\n    <div className=\"counter__button\">\r\n      <button>-</button>\r\n      <button>+</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default counter;","import React from 'react';\r\nimport './Employee.scss';\r\nimport Counter from \"../Counter/Counter\";\r\n\r\n\r\nconst EmployeeTile = (props) => {\r\n  const {name,role} = props\r\n  console.log(name)\r\n\r\n  const employeeName = name.map((names, index)=>{\r\n    return <p key ={\"name-tile\" + index} className=\"name-tiles\">{names}</p>\r\n  })\r\n\r\n  const employeeRole = role.map((roles, index)=>{\r\n    return <p key ={\"role-tile\" + index} className=\"role-tiles\">{roles}</p>\r\n  })\r\n\r\n\r\n  return (\r\n  <>\r\n  <div className = \"tiles\">\r\n    <h3>{employeeName}</h3>\r\n    <h3>{employeeRole}</h3>\r\n    <Counter />\r\n  </div>\r\n  </>\r\n  );\r\n};\r\n\r\n\r\nexport default EmployeeTile;","import './App.scss';\nimport team from \"./data/team\";\nimport Tile from \"./Components/Employee/Employee\";\n\n\n\nconst App = () => {\n  const employeeNames = team.map((names)=>{\n    return names.name;\n  });\n  console.log(employeeNames)\n\n  const employeeRoles = team.map((roles)=>{\n    return roles.role;\n  });\n  console.log(employeeRoles)\n\n  return (\n    <div className=\"app\">\n      <h1>Ticket Tracker</h1>\n      <section className=\"tickets\">\n        <div>\n          <Tile name={employeeNames} role={employeeRoles}/>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}